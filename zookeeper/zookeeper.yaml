apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
  labels:
    app.kubernetes.io/name: zookeeper
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: zookeeper
  template:
    metadata:
      name: zookeeper
      labels:
        app.kubernetes.io/name: zookeeper
    spec:
      securityContext:
        fsGroup: 1001
      initContainers:
        - name: volume-permissions
          image: Placeholder_registry/bitnami-shell:10
          imagePullPolicy: "IfNotPresent"
          command:
            - chown
          args:
            - -R
            - 1001:1001
            - /bitnami/zookeeper
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: data
              mountPath: /bitnami/zookeeper
      containers:
        - name: zookeeper
          image: Placeholder_registry/bitnami-zookeeper:3.6.3
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          command:
            - bash
            - -ec
            - |
              if [[ -f "/bitnami/zookeeper/data/myid" ]]; then
                export ZOO_SERVER_ID="$(cat /bitnami/zookeeper/data/myid)"
              else
                ID=$(echo $HOST_IP |awk -F . '{print $4}')
                export ZOO_SERVER_ID=$ID
              fi
              exec /entrypoint.sh /run.sh
          resources:
          env:
            - name: ZOO_DATA_LOG_DIR
              value: "/bitnami/zookeeper"
            - name: ZOO_PORT_NUMBER
              value: "2181"
            - name: ZOO_TICK_TIME
              value: "2000"
            - name: ZOO_INIT_LIMIT
              value: "10"
            - name: ZOO_SYNC_LIMIT
              value: "5"
            - name: ZOO_MAX_CLIENT_CNXNS
              value: "60"
            - name: ZOO_4LW_COMMANDS_WHITELIST
              value: "srvr, mntr, ruok"
            - name: ZOO_LISTEN_ALLIPS_ENABLED
              value: "no"
            - name: ZOO_AUTOPURGE_INTERVAL
              value: "0"
            - name: ZOO_AUTOPURGE_RETAIN_COUNT
              value: "3"
            - name: ZOO_MAX_SESSION_TIMEOUT
              value: "40000"
            - name: ZOO_SERVERS
              value: "Placeholder_zoo_servers"
            - name: ZOO_ENABLE_AUTH
              value: "no"
            - name: ZOO_HEAP_SIZE
              value: "1024"
            - name: ZOO_LOG_LEVEL
              value: "ERROR"
            - name: ALLOW_ANONYMOUS_LOGIN
              value: "yes"
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          livenessProbe:
            exec:
              command:
                [
                  "/bin/bash",
                  "-c",
                  'echo "ruok" | timeout 2 nc -w 2 localhost 2181 | grep imok',
                ]
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            exec:
              command:
                [
                  "/bin/bash",
                  "-c",
                  'echo "ruok" | timeout 2 nc -w 2 localhost 2181 | grep imok',
                ]
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 10
          volumeMounts:
            - name: data
              mountPath: /bitnami/zookeeper
      volumes:
        - name: data
          hostPath:
            path: /data/zookeeper
      restartPolicy: Always
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      nodeSelector:
        zk: "true"
      tolerations:
        - key: "project"
          value: "gdbdc"
          operator: "Equal"
          effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: zookeeper
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  labels:
    app.kubernetes.io/name: zookeeper
spec:
  selector:
    app.kubernetes.io/name: zookeeper
  ports:
    - port: 2181
      targetPort: 2181
      name: zookeeper
